@{
    ViewData["Title"] = "Öğrenci Paneli";
    Layout = "_LayoutDashboard";
}

<div class="student-dashboard">
    <div class="container-fluid">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="welcome-header">
                    <h1 class="dashboard-title">
                        <i class="fas fa-graduation-cap text-primary"></i>
                        Hoş Geldiniz, @ViewBag.UserName
                    </h1>
                    <p class="text-muted">Eğitim alanınız - Hedeflerinize ulaşın!</p>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Sol Kolon - Eğitim Paketleri -->
            <div class="col-md-8">
                <!-- İstatistik Kartları -->
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="stat-card modern">
                            <div class="stat-icon-wrapper">
                                <div class="stat-icon bg-gradient-success">
                                    <i class="fas fa-book-open"></i>
                                </div>
                            </div>
                            <div class="stat-content">
                                <h3 class="stat-number" id="activePackages">0</h3>
                                <p class="stat-label">Aktif Paket</p>
                                <div class="stat-trend">
                                    <i class="fas fa-check text-success"></i>
                                    <span class="text-success">Aktif</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="stat-card modern">
                            <div class="stat-icon-wrapper">
                                <div class="stat-icon bg-gradient-primary">
                                    <i class="fas fa-video"></i>
                                </div>
                            </div>
                            <div class="stat-content">
                                <h3 class="stat-number" id="totalVideos">0</h3>
                                <p class="stat-label">Toplam Video</p>
                                <div class="stat-trend">
                                    <i class="fas fa-play text-primary"></i>
                                    <span class="text-primary">İzlenebilir</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="stat-card modern">
                            <div class="stat-icon-wrapper">
                                <div class="stat-icon bg-gradient-warning">
                                    <i class="fas fa-file-alt"></i>
                                </div>
                            </div>
                            <div class="stat-content">
                                <h3 class="stat-number" id="totalTests">0</h3>
                                <p class="stat-label">Toplam Test</p>
                                <div class="stat-trend">
                                    <i class="fas fa-clipboard-list text-warning"></i>
                                    <span class="text-warning">Çözülebilir</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Eğitim Paketleri -->
                <div class="card shadow-lg border-0 mb-4">
                    <div class="card-header bg-gradient-primary text-white border-0">
                        <h5 class="mb-0">
                            <i class="fas fa-books me-2"></i>
                            Eğitim Paketlerim
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row" id="packageContainer">
                            <div class="text-center p-4">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p class="mt-2">Paketler yükleniyor...</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Son Aktiviteler ve İlerleme -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="card shadow-lg border-0">
                            <div class="card-header bg-gradient-info text-white border-0">
                                <h6 class="mb-0">
                                    <i class="fas fa-clock text-white me-2"></i>
                                    Son Aktivitelerim
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="activity-list" id="activityList">
                                    <div class="activity-item">
                                        <div class="activity-icon bg-success">
                                            <i class="fas fa-check"></i>
                                        </div>
                                        <div class="activity-content">
                                            <p class="activity-text">LGS Matematik Test 5 tamamlandı</p>
                                            <small class="activity-time">2 saat önce</small>
                                        </div>
                                    </div>
                                    <div class="activity-item">
                                        <div class="activity-icon bg-info">
                                            <i class="fas fa-play"></i>
                                        </div>
                                        <div class="activity-content">
                                            <p class="activity-text">Fonksiyonlar dersi izlendi</p>
                                            <small class="activity-time">5 saat önce</small>
                                        </div>
                                    </div>
                                    <div class="activity-item">
                                        <div class="activity-icon bg-warning">
                                            <i class="fas fa-file-alt"></i>
                                        </div>
                                        <div class="activity-content">
                                            <p class="activity-text">Geometri test sonucu: %85</p>
                                            <small class="activity-time">1 gün önce</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card shadow-lg border-0">
                            <div class="card-header bg-gradient-success text-white border-0">
                                <h6 class="mb-0">
                                    <i class="fas fa-chart-pie text-white me-2"></i>
                                    Genel İlerleme
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="progress-stats" id="progressStats">
                                    <div class="progress-item">
                                        <span class="progress-label">Matematik</span>
                                        <div class="progress-bar-container">
                                            <div class="progress">
                                                <div class="progress-bar bg-success" style="width: 75%"></div>
                                            </div>
                                            <span class="progress-percent">75%</span>
                                        </div>
                                    </div>
                                    <div class="progress-item">
                                        <span class="progress-label">Türkçe</span>
                                        <div class="progress-bar-container">
                                            <div class="progress">
                                                <div class="progress-bar bg-info" style="width: 60%"></div>
                                            </div>
                                            <span class="progress-percent">60%</span>
                                        </div>
                                    </div>
                                    <div class="progress-item">
                                        <span class="progress-label">Fen Bilimleri</span>
                                        <div class="progress-bar-container">
                                            <div class="progress">
                                                <div class="progress-bar bg-warning" style="width: 45%"></div>
                                            </div>
                                            <span class="progress-percent">45%</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sağ Kolon - Öğretmen İletişim -->
            <div class="col-md-4">
                <!-- Öğretmen Profil Kartı -->
                <div class="card shadow-lg border-0 mb-4">
                    <div class="card-header bg-gradient-success text-white border-0">
                        <h5 class="mb-0">
                            <i class="fas fa-user-tie me-2"></i>
                            Matematik Öğretmenim
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="teacher-info" onclick="openTeacherChat()" style="cursor: pointer;">
                            <div class="teacher-avatar">
                                <img src="/img/ogretmen.png" alt="Gurbet CATIN" class="teacher-photo">
                            </div>
                            <div class="teacher-details">
                                <h6 class="teacher-name">Gurbet CATIN</h6>
                                <p class="teacher-title">Matematik Öğretmeni</p>
                                <div class="teacher-status online">
                                    <i class="fas fa-circle"></i> Çevrimiçi
                                </div>
                                <small class="text-muted">
                                    <i class="fas fa-comment-dots me-1"></i>
                                    Sohbet için tıklayın
                                </small>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-light border-0">
                        <button class="btn btn-success btn-sm w-100" onclick="openTeacherChat()">
                            <i class="fas fa-comments me-2"></i>
                            Öğretmenle Sohbet Et
                        </button>
                    </div>
                </div>

                <!-- Mesajlar -->
                <div class="card shadow-lg border-0 mb-4">
                    <div class="card-header bg-gradient-primary text-white border-0">
                        <h5 class="mb-0">
                            <i class="fas fa-comments me-2"></i>
                            Öğretmen Mesajları
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="student-message-list" id="studentMessageList" style="height: 300px; overflow-y: auto;">
                            <div class="text-center p-4">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p class="mt-2">Mesajlar yükleniyor...</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-light border-0">
                        <div class="d-grid gap-2">
                            <button class="btn btn-primary btn-sm" onclick="openTeacherChat()">
                                <i class="fas fa-paper-plane me-2"></i>
                                Yeni Mesaj
                            </button>
                            <button class="btn btn-success btn-sm" onclick="loadStudentMessages()">
                                <i class="fas fa-refresh me-2"></i>
                                Mesajları Yenile
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Yaklaşan Etkinlikler -->
                <div class="card shadow-lg border-0">
                    <div class="card-header bg-gradient-info text-white border-0">
                        <h6 class="mb-0">
                            <i class="fas fa-calendar-alt me-2"></i>
                            Yaklaşan Etkinlikler
                        </h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="event-list">
                            <div class="event-item">
                                <div class="event-date">
                                    <span class="day">15</span>
                                    <span class="month">Şub</span>
                                </div>
                                <div class="event-content">
                                    <h6 class="event-title">LGS Deneme Sınavı</h6>
                                    <p class="event-time">14:00 - 17:00</p>
                                </div>
                            </div>
                            <div class="event-item">
                                <div class="event-date">
                                    <span class="day">20</span>
                                    <span class="month">Şub</span>
                                </div>
                                <div class="event-content">
                                    <h6 class="event-title">Matematik Webinars</h6>
                                    <p class="event-time">19:00 - 20:00</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Öğretmen Sohbet Modal -->
<div class="modal fade" id="teacherChatModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-gradient-success text-white border-0">
                <h5 class="modal-title">
                    <i class="fas fa-chalkboard-teacher me-2"></i>
                    Gurbet CATIN ile Sohbet
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0">
                <!-- Sohbet Alanı -->
                <div id="teacherChatMessages" style="height: 400px; overflow-y: auto; padding: 15px; background-color: #f8f9fa;">
                    <div class="text-center p-4">
                        <i class="fas fa-spinner fa-spin"></i>
                        <p class="mt-2">Sohbet yükleniyor...</p>
                    </div>
                </div>
                
                <!-- Mesaj Gönderme Alanı -->
                <div class="chat-input-area p-3 border-top bg-white">
                    <div class="row g-2">
                        <div class="col-md-3">
                            <select class="form-select form-select-sm" id="teacherChatSubject">
                                <option value="Ders Sorusu">Ders Sorusu</option>
                                <option value="Test Hakkında">Test Hakkında</option>
                                <option value="Genel Soru">Genel Soru</option>
                                <option value="Teknik Destek">Teknik Destek</option>
                            </select>
                        </div>
                        <div class="col-md-7">
                            <textarea class="form-control form-control-sm" id="teacherChatContent" rows="2" 
                                    placeholder="Öğretmeninize mesajınızı yazın..." style="resize: none;"></textarea>
                        </div>
                        <div class="col-md-2">
                            <button class="btn btn-success btn-sm w-100 h-100" onclick="sendTeacherMessage()">
                                <i class="fas fa-paper-plane"></i>
                                <br><small>Gönder</small>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Paket Aktivasyon Modal -->
<div class="modal fade" id="packageActivationModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-gradient-primary text-white border-0">
                <h5 class="modal-title" id="packageActivationTitle">
                    <i class="fas fa-gift me-2"></i>
                    Paket Aktivasyon
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0">
                <div class="p-4">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">Paket Adı:</p>
                            <h6 id="packageActivationTitle" class="fw-bold"></h6>
                        </div>
                        <div class="col-md-6 text-end">
                            <p class="text-muted">Fiyat:</p>
                            <h6 id="packageActivationPrice" class="fw-bold text-success"></h6>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">Açıklama:</p>
                            <p id="packageActivationDescription" class="text-muted"></p>
                        </div>
                        <div class="col-md-6 text-end">
                            <p class="text-muted">Süre:</p>
                            <h6 id="packageActivationDuration" class="fw-bold"></h6>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">İçerik:</p>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-video text-primary"></i> <span id="packageActivationVideos"></span> Video</li>
                                <li><i class="fas fa-file-alt text-info"></i> <span id="packageActivationTests"></span> Test</li>
                            </ul>
                        </div>
                    </div>
                    <input type="hidden" id="selectedPackageId" value="">
                    <div class="text-center mt-4">
                        <button class="btn btn-success btn-lg w-100" onclick="activatePackage()">
                            <i class="fas fa-check-circle me-2"></i>Paketi Aktif Et
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Paket Talep Modal -->
<div class="modal fade" id="packageRequestModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-gradient-warning text-white border-0">
                <h5 class="modal-title" id="packageRequestTitle">
                    <i class="fas fa-gift me-2"></i>
                    Paket Talep
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0">
                <div class="p-4">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">Paket Adı:</p>
                            <h6 id="packageRequestTitle" class="fw-bold"></h6>
                        </div>
                        <div class="col-md-6 text-end">
                            <p class="text-muted">Fiyat:</p>
                            <h6 id="packageRequestPrice" class="fw-bold text-warning"></h6>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">Açıklama:</p>
                            <p id="packageRequestDescription" class="text-muted"></p>
                        </div>
                        <div class="col-md-6 text-end">
                            <p class="text-muted">Süre:</p>
                            <h6 id="packageRequestDuration" class="fw-bold"></h6>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="text-muted">İçerik:</p>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-video text-primary"></i> <span id="packageRequestVideos"></span> Video</li>
                                <li><i class="fas fa-file-alt text-info"></i> <span id="packageRequestTests"></span> Test</li>
                            </ul>
                        </div>
                    </div>
                    <input type="hidden" id="requestedPackageId" value="">
                    <div class="text-center mt-4">
                        <button class="btn btn-warning btn-lg w-100" onclick="requestPackage()">
                            <i class="fas fa-paper-plane me-2"></i>Paketi Talep Et
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.student-dashboard {
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
    padding: 20px;
    margin: 0;
    width: 100%;
    position: relative;
}

.welcome-header {
    text-align: center;
    margin-bottom: 30px;
    color: #2c3e50;
}

.dashboard-title {
    color: #2c3e50;
    font-weight: 700;
    text-shadow: none;
    font-size: 2.5rem;
    margin-bottom: 10px;
}

.dashboard-title i {
    color: #3498db;
    margin-right: 15px;
}

.stat-card.modern {
    background: white;
    border-radius: 20px;
    padding: 30px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.08);
    transition: all 0.4s ease;
    border: none;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
}

.stat-card.modern:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0,0,0,0.12);
}

.stat-card.modern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(45deg, #3498db, #2980b9);
}

.stat-icon-wrapper {
    display: flex;
    align-items: center;
    margin-bottom: 25px;
}

.stat-icon {
    width: 70px;
    height: 70px;
    border-radius: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 28px;
    color: white;
    margin-right: 20px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
}

.bg-gradient-primary {
    background: linear-gradient(45deg, #3498db, #2980b9) !important;
}

.bg-gradient-success {
    background: linear-gradient(45deg, #27ae60, #2ecc71) !important;
}

.bg-gradient-info {
    background: linear-gradient(45deg, #17a2b8, #20c997) !important;
}

.bg-gradient-warning {
    background: linear-gradient(45deg, #f39c12, #e67e22) !important;
}

.stat-content {
    flex-grow: 1;
}

.stat-number {
    font-size: 3rem;
    font-weight: 800;
    color: #2c3e50;
    margin-bottom: 8px;
    line-height: 1;
}

.stat-label {
    color: #7f8c8d;
    font-size: 1rem;
    margin-bottom: 12px;
    font-weight: 600;
}

.stat-trend {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    font-weight: 600;
}

.stat-trend i {
    margin-right: 8px;
}

.course-package {
    background: white;
    border-radius: 20px;
    padding: 30px;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0,0,0,0.08);
    transition: all 0.4s ease;
    cursor: pointer;
    height: 350px;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
}

.course-package::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
}

.course-package.lgs-package::before { background: linear-gradient(45deg, #27ae60, #2ecc71); }
.course-package.tyt-package::before { background: linear-gradient(45deg, #3498db, #2980b9); }
.course-package.ayt-package::before { background: linear-gradient(45deg, #e74c3c, #c0392b); }

.course-package:hover {
    transform: translateY(-12px);
    box-shadow: 0 25px 50px rgba(0,0,0,0.15);
    cursor: pointer;
}

.course-package:active {
    transform: translateY(-8px);
    box-shadow: 0 15px 35px rgba(0,0,0,0.12);
}

.package-icon {
    font-size: 3.5rem;
    margin-bottom: 25px;
    color: #95a5a6;
}

.lgs-package .package-icon { color: #27ae60; }
.tyt-package .package-icon { color: #3498db; }
.ayt-package .package-icon { color: #e74c3c; }

.package-info {
    flex-grow: 1;
}

.package-name {
    font-size: 1.4rem;
    font-weight: 700;
    color: #2c3e50;
    margin-bottom: 15px;
}

.package-description {
    color: #7f8c8d;
    font-size: 1rem;
    margin-bottom: 20px;
    line-height: 1.6;
}

.package-grade {
    background: #ecf0f1;
    color: #2c3e50;
    padding: 8px 20px;
    border-radius: 25px;
    font-size: 0.9rem;
    font-weight: 700;
    display: inline-block;
    margin-bottom: 15px;
}

.package-price {
    background: linear-gradient(45deg, #e74c3c, #c0392b);
    color: white;
    padding: 12px 24px;
    border-radius: 30px;
    font-size: 1.1rem;
    font-weight: 800;
    display: inline-block;
    margin-bottom: 20px;
    box-shadow: 0 8px 20px rgba(231, 76, 60, 0.3);
}

.package-stats {
    margin-bottom: 25px;
}

.stat-item {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 10px;
    font-size: 0.95rem;
    font-weight: 600;
}

.stat-item i {
    margin-right: 10px;
}

.package-button {
    margin-top: auto;
}

.activity-item {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    padding: 15px;
    border-radius: 15px;
    transition: all 0.3s ease;
    background: #f8f9fa;
}

.activity-item:hover {
    background-color: #e9ecef;
    transform: translateX(8px);
}

.activity-icon {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 20px;
    color: white;
    font-size: 1rem;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.activity-text {
    font-size: 1rem;
    color: #2c3e50;
    margin: 0;
    font-weight: 600;
}

.activity-time {
    color: #7f8c8d;
    font-size: 0.85rem;
    font-weight: 500;
}

.progress-item {
    margin-bottom: 20px;
}

.progress-label {
    font-size: 1rem;
    color: #2c3e50;
    font-weight: 600;
    margin-bottom: 8px;
    display: block;
}

.progress-bar-container {
    display: flex;
    align-items: center;
    margin-top: 8px;
}

.progress {
    flex-grow: 1;
    margin-right: 15px;
    height: 12px;
    border-radius: 6px;
    background-color: #ecf0f1;
    overflow: hidden;
}

.progress-bar {
    border-radius: 6px;
    transition: width 0.8s ease;
}

.progress-percent {
    font-size: 0.9rem;
    color: #7f8c8d;
    font-weight: 700;
    min-width: 40px;
}

.teacher-info {
    display: flex;
    align-items: center;
    margin-bottom: 30px;
    padding-bottom: 25px;
    border-bottom: 2px solid #ecf0f1;
    transition: all 0.3s ease;
}

.teacher-info:hover {
    background-color: rgba(39, 174, 96, 0.1);
    border-radius: 15px;
    padding: 15px;
    margin: -15px -15px 15px -15px;
}

.teacher-avatar {
    margin-right: 20px;
}

.teacher-photo {
    width: 70px;
    height: 70px;
    border-radius: 50%;
    object-fit: cover;
    border: 4px solid #27ae60;
    box-shadow: 0 8px 20px rgba(39, 174, 96, 0.3);
}

.teacher-name {
    font-weight: 700;
    color: #2c3e50;
    margin-bottom: 8px;
    font-size: 1.1rem;
}

.teacher-title {
    color: #7f8c8d;
    font-size: 1rem;
    margin-bottom: 10px;
    font-weight: 500;
}

.teacher-status {
    font-size: 0.9rem;
    font-weight: 600;
}

.teacher-status.online {
    color: #27ae60;
}

.teacher-status i {
    font-size: 0.7rem;
    margin-right: 8px;
}

.event-item {
    display: flex;
    align-items: center;
    padding: 20px;
    border-bottom: 2px solid #ecf0f1;
    transition: all 0.3s ease;
}

.event-item:hover {
    background-color: #f8f9fa;
    transform: translateX(8px);
}

.event-item:last-child {
    border-bottom: none;
}

.event-date {
    text-align: center;
    margin-right: 20px;
    min-width: 60px;
}

.event-date .day {
    display: block;
    font-size: 1.5rem;
    font-weight: 800;
    color: #2c3e50;
}

.event-date .month {
    display: block;
    font-size: 0.9rem;
    color: #7f8c8d;
    text-transform: uppercase;
    font-weight: 600;
}

.event-title {
    font-size: 1rem;
    font-weight: 700;
    color: #2c3e50;
    margin-bottom: 8px;
}

.event-time {
    font-size: 0.9rem;
    color: #7f8c8d;
    margin: 0;
    font-weight: 500;
}

/* Student Chat Message Styles */
.student-chat-sent {
    max-width: 70%;
    background: linear-gradient(45deg, #27ae60, #2ecc71);
    color: white;
    border-radius: 20px 20px 5px 20px;
    padding: 15px 20px;
    margin-left: auto;
    box-shadow: 0 5px 15px rgba(39, 174, 96, 0.3);
}

.student-chat-received {
    max-width: 70%;
    background-color: #ecf0f1;
    color: #2c3e50;
    border-radius: 20px 20px 20px 5px;
    padding: 15px 20px;
    margin-right: auto;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

/* Student Message List Styles */
.student-message-item {
    display: flex;
    align-items: flex-start;
    padding: 20px;
    border-bottom: 2px solid #ecf0f1;
    cursor: pointer;
    transition: all 0.3s ease;
    background: white;
}

.student-message-item:hover {
    background-color: #f8f9fa;
    transform: translateX(8px);
}

.student-message-item:last-child {
    border-bottom: none;
}

.student-sent-message {
    background-color: #e8f5e8;
    border-left: 4px solid #27ae60;
}

.student-received-message {
    background-color: #e3f2fd;
    border-left: 4px solid #3498db;
}

.student-message-item .message-avatar {
    margin-right: 20px;
    width: 50px;
    text-align: center;
}

.student-message-item .message-avatar i {
    font-size: 1.8em;
}

.student-message-item .message-content {
    flex-grow: 1;
}

.student-message-item .message-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 8px;
}

.student-message-item .message-sender {
    font-weight: 700;
    color: #2c3e50;
    font-size: 1rem;
}

.student-message-item .message-time {
    color: #7f8c8d;
    font-size: 0.9rem;
    margin-left: auto;
    font-weight: 500;
}

.student-message-item .message-text {
    color: #34495e;
    font-size: 1rem;
    margin: 0;
    line-height: 1.5;
    font-weight: 500;
}

.card {
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0,0,0,0.08);
}

.card-header {
    border-radius: 20px 20px 0 0 !important;
    font-weight: 700;
    font-size: 1.1rem;
}

.form-select, .form-control {
    border-radius: 15px;
    border: 2px solid #ecf0f1;
    font-weight: 500;
}

.form-select:focus, .form-control:focus {
    border-color: #3498db;
    box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
}

.btn {
    border-radius: 15px;
    font-weight: 700;
    transition: all 0.3s ease;
    padding: 12px 24px;
    font-size: 1rem;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(0,0,0,0.15);
}

.btn-sm {
    padding: 8px 16px;
    font-size: 0.9rem;
}

.modal-content {
    border-radius: 20px;
}

.modal-header {
    border-radius: 20px 20px 0 0 !important;
}

.modal-footer {
    border-radius: 0 0 20px 20px !important;
}
</style>

<script>
function selectPackage(packageType) {
    // Paket ID'sini al
    const packageId = getPackageId(packageType);
    
    // Önce paket erişimini kontrol et
    fetch(`/Package/CheckPackageAccess?packageId=${packageId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Pakete erişim varsa dersler sayfasına yönlendir
                window.location.href = `/Course/Lessons?packageId=${packageId}`;
            } else {
                // Erişim yoksa paket talep modal'ını aç
                showPackageRequestModal(packageType);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            // Hata durumunda paket talep modal'ını aç
            showPackageRequestModal(packageType);
        });
}

function showPackageRequestModal(packageType) {
    // Paket bilgilerini al
    fetch(`/Package/GetById?id=${getPackageId(packageType)}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const pkg = data.data;
                
                // Modal içeriğini güncelle
                document.getElementById('packageRequestTitle').textContent = `${pkg.name} Paketi`;
                document.getElementById('packageRequestDescription').textContent = pkg.description;
                document.getElementById('packageRequestPrice').textContent = `₺${pkg.price}`;
                document.getElementById('packageRequestDuration').textContent = `${pkg.durationMonths} Ay`;
                document.getElementById('packageRequestVideos').textContent = `${pkg.videoCount} Video`;
                document.getElementById('packageRequestTests').textContent = `${pkg.testCount} Test`;
                
                // Paket ID'sini sakla
                document.getElementById('requestedPackageId').value = pkg.id;
                
                // Modal'ı aç
                new bootstrap.Modal(document.getElementById('packageRequestModal')).show();
            } else {
                Swal.fire({
                    title: 'Hata!',
                    text: 'Paket bilgileri yüklenirken hata oluştu!',
                    icon: 'error',
                    confirmButtonColor: '#dc3545'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Hata!',
                text: 'Paket bilgileri yüklenirken hata oluştu!',
                icon: 'error',
                confirmButtonColor: '#dc3545'
            });
        });
}

function getPackageId(packageType) {
    switch(packageType.toLowerCase()) {
        case 'lgs': return 1;
        case 'tyt': return 2;
        case 'ayt': return 3;
        case 'canlı ders':
        case 'canli ders':
        case 'canlıders':
        case 'canliders': return 4;
        default: return 1;
    }
}

function requestPackage() {
    const packageId = document.getElementById('requestedPackageId').value;
    
    if (!packageId) {
        Swal.fire({
            title: 'Hata!',
            text: 'Paket seçimi hatası!',
            icon: 'error',
            confirmButtonColor: '#dc3545'
        });
        return;
    }
    
    // Loading göster
    Swal.fire({
        title: 'Talep gönderiliyor...',
        text: 'Lütfen bekleyin',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });
    
    // Paket talebi gönder
    fetch('/Package/RequestPackage', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ packageId: parseInt(packageId) })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: 'Başarılı!',
                text: 'Paket talebiniz başarıyla gönderildi!',
                icon: 'success',
                confirmButtonColor: '#28a745'
            }).then(() => {
                // Modal'ı kapat
                bootstrap.Modal.getInstance(document.getElementById('packageRequestModal')).hide();
                
                // Paketleri yeniden yükle
                loadPackages();
                loadMyRequests();
            });
        } else {
            Swal.fire({
                title: 'Hata!',
                text: 'Paket talebi başarısız: ' + data.message,
                icon: 'error',
                confirmButtonColor: '#dc3545'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Hata!',
            text: 'Paket talebi sırasında hata oluştu!',
            icon: 'error',
            confirmButtonColor: '#dc3545'
        });
    });
}

function loadMyRequests() {
    fetch('/Package/GetMyRequests')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                updateRequestStats(data.data);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
}

function updateRequestStats(requests) {
    const pendingCount = requests.filter(r => r.status === 'Pending').length;
    const approvedCount = requests.filter(r => r.status === 'Approved').length;
    
    // İstatistikleri güncelle
    document.getElementById('pendingRequests').textContent = pendingCount;
    document.getElementById('approvedRequests').textContent = approvedCount;
}

function openLessons(packageId) {
    // Önce paket erişimini kontrol et
    fetch(`/Package/CheckPackageAccess?packageId=${packageId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Ders sayfasına yönlendir
                window.location.href = `/Course/Lessons?packageId=${packageId}`;
            } else {
                Swal.fire({
                    title: 'Erişim Yok',
                    text: 'Bu pakete erişiminiz bulunmuyor. Lütfen önce öğretmeninizden onay alın.',
                    icon: 'warning',
                    confirmButtonColor: '#ffc107'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Hata!',
                text: 'Paket erişimi kontrol edilirken hata oluştu!',
                icon: 'error',
                confirmButtonColor: '#dc3545'
            });
        });
}

function sendMessage() {
    const subject = document.getElementById('messageSubject').value;
    const content = document.getElementById('messageContent').value;
    
    if (content.trim() === '') {
        Swal.fire({
            title: 'Uyarı',
            text: 'Lütfen mesajınızı yazın!',
            icon: 'warning',
            confirmButtonColor: '#ffc107'
        });
        return;
    }
    
    // Loading göster
    Swal.fire({
        title: 'Mesaj gönderiliyor...',
        text: 'Lütfen bekleyin',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });
    
    // AJAX ile mesaj gönder
    fetch('/Message/Send', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
        },
        body: JSON.stringify({
            subject: subject,
            content: content,
            receiverId: 1 // Öğretmen ID'si
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                title: 'Başarılı!',
                text: 'Mesajınız başarıyla gönderildi!',
                icon: 'success',
                confirmButtonColor: '#28a745'
            });
            document.getElementById('messageContent').value = '';
        } else {
            Swal.fire({
                title: 'Hata!',
                text: 'Mesaj gönderilirken bir hata oluştu: ' + data.message,
                icon: 'error',
                confirmButtonColor: '#dc3545'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Başarılı!',
            text: 'Mesaj gönderildi! (Demo modda)',
            icon: 'success',
            confirmButtonColor: '#28a745'
        });
        document.getElementById('messageContent').value = '';
    });
}

function openTeacherChat() {
    // Modal'ı aç
    new bootstrap.Modal(document.getElementById('teacherChatModal')).show();
    
    // Öğretmenle sohbet mesajlarını yükle
    loadTeacherChatMessages();
}

function loadTeacherChatMessages() {
    const teacherId = 1; // Öğretmen ID'si
    
    fetch(`/Message/GetChatMessages?studentId=${teacherId}`)
        .then(response => response.json())
        .then(data => {
            const chatMessages = document.getElementById('teacherChatMessages');
            
            if (data.success && data.data.length > 0) {
                let messagesHtml = '';
                
                data.data.forEach(message => {
                    const isMyMessage = message.isSentByMe;
                    const messageClass = isMyMessage ? 'student-chat-sent' : 'student-chat-received';
                    const alignClass = isMyMessage ? 'justify-content-end' : 'justify-content-start';
                    
                    messagesHtml += `
                        <div class="d-flex ${alignClass} mb-3">
                            <div class="${messageClass}">
                                <div class="chat-message-content">
                                    <p class="mb-1">${message.content}</p>
                                    <small class="chat-message-time">${message.sentAt}</small>
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                chatMessages.innerHTML = messagesHtml;
                
                // En alt mesaja scroll
                chatMessages.scrollTop = chatMessages.scrollHeight;
            } else {
                chatMessages.innerHTML = '<div class="text-center p-4"><p class="text-muted">Henüz mesaj bulunmuyor. İlk mesajı gönderin!</p></div>';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('teacherChatMessages').innerHTML = '<div class="text-center p-4"><p class="text-danger">Sohbet yüklenirken hata oluştu.</p></div>';
        });
}

function sendTeacherMessage() {
    const subject = document.getElementById('teacherChatSubject').value;
    const content = document.getElementById('teacherChatContent').value;
    
    if (!content.trim()) {
        Swal.fire({
            title: 'Uyarı',
            text: 'Lütfen mesajınızı yazın!',
            icon: 'warning',
            confirmButtonColor: '#ffc107'
        });
        return;
    }
    
    // Loading göster
    Swal.fire({
        title: 'Mesaj gönderiliyor...',
        text: 'Lütfen bekleyin',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });
    
    // AJAX ile mesaj gönder
    fetch('/Message/Send', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            subject: subject,
            content: content,
            receiverId: 1 // Öğretmen ID'si
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Mesajı temizle
            document.getElementById('teacherChatContent').value = '';
            
            // Sohbeti yeniden yükle
            loadTeacherChatMessages();
        } else {
            Swal.fire({
                title: 'Hata!',
                text: 'Mesaj gönderilirken bir hata oluştu: ' + data.message,
                icon: 'error',
                confirmButtonColor: '#dc3545'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Hata!',
            text: 'Mesaj gönderilirken bir hata oluştu!',
            icon: 'error',
            confirmButtonColor: '#dc3545'
        });
    });
}

// Enter tuşu ile mesaj gönderme (öğrenci tarafı)
document.addEventListener('keydown', function(event) {
    if (event.target.id === 'teacherChatContent' && event.key === 'Enter' && !event.shiftKey) {
        event.preventDefault();
        sendTeacherMessage();
    }
});

// Öğrenci mesaj listesini yükle
function loadStudentMessages() {
    fetch('/Message/GetMessages')
        .then(response => response.json())
        .then(data => {
            const messageList = document.getElementById('studentMessageList');
            
            if (data.success && data.data.length > 0) {
                let messagesHtml = '';
                
                data.data.forEach(message => {
                    // Mesaj HTML'i oluştur
                    const messageClass = message.isSentByMe ? 'student-sent-message' : 'student-received-message';
                    const messageIcon = message.isSentByMe ? 'fas fa-paper-plane text-success' : 'fas fa-chalkboard-teacher text-primary';
                    
                    messagesHtml += `
                        <div class="student-message-item ${messageClass}" onclick="openTeacherChat()">
                            <div class="message-avatar">
                                <i class="${messageIcon}"></i>
                            </div>
                            <div class="message-content">
                                <div class="message-header">
                                    <span class="message-sender">${message.isSentByMe ? 'Siz → Öğretmen' : 'Öğretmen → Siz'}</span>
                                    <span class="message-time">${message.sentAt}</span>
                                    ${!message.isRead && !message.isSentByMe ? '<span class="badge bg-danger ms-2">Yeni</span>' : ''}
                                </div>
                                <p class="message-text">${message.content.substring(0, 100)}${message.content.length > 100 ? '...' : ''}</p>
                            </div>
                        </div>
                    `;
                });
                
                messageList.innerHTML = messagesHtml || '<div class="text-center p-4"><p class="text-muted">Henüz mesaj bulunmuyor.</p></div>';
            } else {
                messageList.innerHTML = '<div class="text-center p-4"><p class="text-muted">Henüz mesaj bulunmuyor.</p></div>';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('studentMessageList').innerHTML = '<div class="text-center p-4"><p class="text-danger">Mesajlar yüklenirken hata oluştu.</p></div>';
        });
}

// Paketleri yükle
function loadPackages() {
    fetch('/Package/GetAll')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                renderPackages(data.data);
                updateStats(data.data);
            } else {
                document.getElementById('packageContainer').innerHTML = '<div class="text-center p-4"><p class="text-danger">Paketler yüklenirken hata oluştu.</p></div>';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('packageContainer').innerHTML = '<div class="text-center p-4"><p class="text-danger">Paketler yüklenirken hata oluştu.</p></div>';
        });
}

function renderPackages(packages) {
    const container = document.getElementById('packageContainer');
    let packagesHtml = '';
    
    packages.forEach(pkg => {
        const packageClass = pkg.name.toLowerCase().replace(' ', '-') + '-package';
        const isActive = pkg.isActive;
        const buttonClass = isActive ? (pkg.name === 'LGS' ? 'btn-success' : pkg.name === 'Canlı Ders' ? 'btn-warning' : 'btn-primary') : 'btn-secondary';
        const buttonText = isActive ? (pkg.name === 'LGS' ? 'Devam Et' : pkg.name === 'Canlı Ders' ? 'Katıl' : 'Başla') : 'Yakında';
        const buttonIcon = isActive ? (pkg.name === 'Canlı Ders' ? 'fas fa-video' : 'fas fa-play') : 'fas fa-lock';
        const statusIcon = isActive ? (pkg.name === 'Canlı Ders' ? 'fas fa-video text-warning' : 'fas fa-chart-line text-success') : 'fas fa-lock text-danger';
        const statusText = isActive ? (pkg.name === 'Canlı Ders' ? 'Canlı Dersler' : pkg.name === 'LGS' ? '%78 İlerleme' : '%45 İlerleme') : 'Kilitli';
        
        packagesHtml += `
            <div class="col-md-4 mb-4">
                <div class="course-package ${packageClass}" onclick="selectPackage('${pkg.name.toLowerCase()}')" style="cursor: pointer;">
                    <div class="package-icon">
                        <i class="${pkg.iconClass}"></i>
                    </div>
                    <div class="package-info">
                        <h6 class="package-name">${pkg.name} Paketi</h6>
                        <p class="package-description">${pkg.description}</p>
                        <div class="package-grade">${pkg.grade}</div>
                        <div class="package-price">₺${pkg.price}</div>
                    </div>
                    <div class="package-stats">
                        <div class="stat-item">
                            <i class="fas fa-video text-primary"></i>
                            <span>${pkg.videoCount} Video</span>
                        </div>
                        <div class="stat-item">
                            <i class="fas fa-file-alt text-info"></i>
                            <span>${pkg.testCount} Test</span>
                        </div>
                        <div class="stat-item">
                            <i class="${statusIcon}"></i>
                            <span>${statusText}</span>
                        </div>
                    </div>
                    <div class="package-actions">
                        <button class="btn ${buttonClass} btn-sm" onclick="event.stopPropagation(); selectPackage('${pkg.name.toLowerCase()}')" ${!isActive ? 'disabled' : ''}>
                            <i class="${buttonIcon} me-2"></i>${buttonText}
                        </button>
                        <button class="btn btn-outline-info btn-sm" onclick="event.stopPropagation(); openLessons(${pkg.id})">
                            <i class="fas fa-graduation-cap me-2"></i>Dersler
                        </button>
                    </div>
                </div>
            </div>
        `;
    });
    
    container.innerHTML = packagesHtml;
}

function updateStats(packages) {
    let activePackages = 0;
    let totalVideos = 0;
    let totalTests = 0;
    
    packages.forEach(pkg => {
        if (pkg.isActive) {
            activePackages++;
            totalVideos += pkg.videoCount;
            totalTests += pkg.testCount;
        }
    });
    
    document.getElementById('activePackages').textContent = activePackages;
    document.getElementById('totalVideos').textContent = totalVideos;
    document.getElementById('totalTests').textContent = totalTests;
}

// Talep durumunu kontrol et
function checkRequestStatus(packageId) {
    return fetch(`/Package/GetMyRequests`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const request = data.data.find(r => r.packageId === packageId);
                return request;
            }
            return null;
        })
        .catch(error => {
            console.error('Error:', error);
            return null;
        });
}

// Paket butonunu güncelle
function updatePackageButton(packageId, buttonElement) {
    checkRequestStatus(packageId).then(request => {
        if (request) {
            if (request.status === 'Pending') {
                buttonElement.innerHTML = '<i class="fas fa-clock me-2"></i>Bekliyor';
                buttonElement.className = 'btn btn-warning btn-sm';
                buttonElement.disabled = true;
            } else if (request.status === 'Rejected') {
                buttonElement.innerHTML = '<i class="fas fa-times me-2"></i>Reddedildi';
                buttonElement.className = 'btn btn-danger btn-sm';
                buttonElement.disabled = true;
            } else if (request.status === 'Approved') {
                buttonElement.innerHTML = '<i class="fas fa-check me-2"></i>Onaylandı';
                buttonElement.className = 'btn btn-success btn-sm';
                buttonElement.disabled = true;
            }
        }
    });
}

// Sayfa yüklendiğinde
document.addEventListener('DOMContentLoaded', function() {
    // Paketleri yükle
    loadPackages();
    
    // Taleplerimi yükle
    loadMyRequests();
    
    // Mesajları yükle
    loadStudentMessages();
    
    // Her 5 saniyede bir mesajları yenile
    setInterval(loadStudentMessages, 5000);
    
    // Her 10 saniyede bir talepleri yenile
    setInterval(loadMyRequests, 10000);
    
    // Eğer öğretmen sohbeti açıksa, onu da yenile
    setInterval(function() {
        if (document.getElementById('teacherChatModal').classList.contains('show')) {
            loadTeacherChatMessages();
        }
    }, 3000);
});
</script>