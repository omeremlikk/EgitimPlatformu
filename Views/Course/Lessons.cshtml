@{
    ViewData["Title"] = $"{ViewBag.Package.Name} Dersleri";
    Layout = "_LayoutDashboard";
}

<div class="course-page">
    <div class="container-fluid">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="course-header">
                    <h1 class="course-title">
                        <i class="fas fa-graduation-cap text-primary"></i>
                        @ViewBag.Package.Name Dersleri
                    </h1>
                    <p class="text-muted">Hoş geldiniz, @ViewBag.UserName</p>
                </div>
            </div>
        </div>

        <!-- Paket Bilgileri -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card shadow-lg border-0">
                    <div class="card-header bg-gradient-primary text-white border-0">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>
                            Paket Bilgileri
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="package-info">
                            <p><strong>Paket:</strong> @ViewBag.Package.Name</p>
                            <p><strong>Sınıf:</strong> @ViewBag.Package.Grade</p>
                            <p><strong>Açıklama:</strong> @ViewBag.Package.Description</p>
                            <p><strong>Video Sayısı:</strong> @ViewBag.Package.VideoCount</p>
                            <p><strong>Test Sayısı:</strong> @ViewBag.Package.TestCount</p>
                            <p><strong>Aktif Edilme:</strong> @ViewBag.UserPackage.ActivatedAt.ToString("dd.MM.yyyy")</p>
                            <p><strong>Bitiş Tarihi:</strong> @ViewBag.UserPackage.ExpiresAt.ToString("dd.MM.yyyy")</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Video Dersleri -->
            <div class="col-md-8">
                <div class="card shadow-lg border-0">
                    <div class="card-header bg-gradient-success text-white border-0">
                        <h5 class="mb-0">
                            <i class="fas fa-play-circle me-2"></i>
                            Video Dersleri
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="video-list" id="videoContainer">
                            <!-- Videolar dinamik olarak yüklenecek -->
                            <div class="text-center p-4">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p class="mt-2">Video dersleri yükleniyor...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.course-page {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    padding: 20px;
    margin: 0;
    width: 100%;
    position: relative;
}

.course-header {
    text-align: center;
    margin-bottom: 30px;
    color: white;
}

.course-title {
    color: white;
    font-weight: 600;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
}

.package-info p {
    margin-bottom: 10px;
    color: #495057;
}

.video-list {
    max-height: 600px;
    overflow-y: auto;
}

.video-item {
    display: flex;
    align-items: center;
    padding: 15px 20px;
    border-bottom: 1px solid #f0f0f0;
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    background: white;
}

.video-item:last-child {
    border-bottom: none;
}

.video-item:hover {
    background-color: #f8f9fa;
    transform: translateX(5px);
}

.video-item.completed {
    background-color: #f1f8e9;
    border-left: 4px solid #28a745;
}

.video-item.current {
    background-color: #e3f2fd;
    border-left: 4px solid #2196f3;
}

.video-thumbnail {
    width: 80px;
    height: 60px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    margin-right: 15px;
    position: relative;
    overflow: hidden;
}

.video-thumbnail i {
    z-index: 2;
}

.video-thumbnail::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255,255,255,0.1);
    backdrop-filter: blur(10px);
}

.video-info {
    flex: 1;
    margin-right: 15px;
}

.video-title {
    font-weight: 600;
    color: #2c3e50;
    margin: 0 0 5px 0;
    font-size: 1rem;
    line-height: 1.3;
}

.video-description {
    color: #6c757d;
    font-size: 0.9rem;
    margin: 0 0 8px 0;
    line-height: 1.4;
}

.video-stats {
    display: flex;
    gap: 15px;
    align-items: center;
}

.video-stat {
    display: flex;
    align-items: center;
    color: #6c757d;
    font-size: 0.8rem;
}

.video-stat i {
    margin-right: 5px;
    color: #28a745;
}

.video-actions {
    display: flex;
    flex-direction: column;
    gap: 8px;
    align-items: flex-end;
}

.video-status {
    padding: 4px 10px;
    border-radius: 15px;
    font-size: 0.75rem;
    font-weight: 600;
    text-align: center;
    min-width: 80px;
}

.status-locked {
    background-color: #f8d7da;
    color: #721c24;
}

.status-ready {
    background-color: #d1ecf1;
    color: #0c5460;
}

.status-completed {
    background-color: #d4edda;
    color: #155724;
}

.status-current {
    background-color: #cce7ff;
    color: #004085;
}

.play-button {
    background: linear-gradient(45deg, #28a745, #20c997);
    color: white;
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(40, 167, 69, 0.3);
}

.play-button:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
}

.play-button:disabled {
    background: #6c757d;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.video-progress {
    width: 100%;
    height: 4px;
    background-color: #e9ecef;
    border-radius: 2px;
    margin-top: 8px;
    overflow: hidden;
}

.video-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #28a745, #20c997);
    border-radius: 2px;
    transition: width 0.3s ease;
}

.card {
    border-radius: 15px;
    overflow: hidden;
}

.card-header {
    border-radius: 15px 15px 0 0 !important;
}

.btn {
    border-radius: 10px;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}
</style>

<script>
// Video dersleri yükle
function loadVideos() {
    const packageId = @ViewBag.Package.Id;
    const packageName = '@ViewBag.Package.Name';

    // Temsili video verileri
    const videos = getVideosByPackage(packageName);
    renderVideos(videos);
}

function getVideosByPackage(packageName) {
    const videoData = {
        'LGS': [
            { id: 1, title: 'Giriş ve Temel Kavramlar', description: 'Dersin genel tanıtımı ve temel kavramlar', duration: '15:30', views: 245, status: 'current', progress: 65 },
            { id: 2, title: 'Sayılar ve İşlemler', description: 'Doğal sayılar, tam sayılar ve temel işlemler', duration: '22:45', views: 189, status: 'ready', progress: 0 },
            { id: 3, title: 'Kesirler ve Ondalık Sayılar', description: 'Kesir işlemleri ve ondalık sayılarla çalışma', duration: '28:15', views: 167, status: 'ready', progress: 0 },
            { id: 4, title: 'Oran ve Orantı', description: 'Oran orantı kavramları ve problemler', duration: '25:30', views: 134, status: 'locked', progress: 0 },
            { id: 5, title: 'Yüzdeler', description: 'Yüzde hesaplamaları ve problemleri', duration: '20:40', views: 98, status: 'locked', progress: 0 },
            { id: 6, title: 'Geometrik Şekiller', description: 'Temel geometrik şekiller ve özellikleri', duration: '30:20', views: 76, status: 'locked', progress: 0 }
        ],
        'TYT': [
            { id: 1, title: 'Temel Matematik Giriş', description: 'TYT matematik konularına giriş', duration: '18:45', views: 312, status: 'completed', progress: 100 },
            { id: 2, title: 'Sayı Sistemleri', description: 'Sayı sistemleri ve dönüşümler', duration: '24:30', views: 287, status: 'current', progress: 45 },
            { id: 3, title: 'Fonksiyonlar', description: 'Fonksiyon kavramı ve türleri', duration: '32:15', views: 245, status: 'ready', progress: 0 },
            { id: 4, title: 'Denklemler', description: 'Birinci ve ikinci derece denklemler', duration: '28:50', views: 198, status: 'ready', progress: 0 },
            { id: 5, title: 'Eşitsizlikler', description: 'Eşitsizlik çözüm yöntemleri', duration: '26:35', views: 167, status: 'locked', progress: 0 },
            { id: 6, title: 'Logaritma', description: 'Logaritma kavramı ve özellikleri', duration: '29:20', views: 134, status: 'locked', progress: 0 }
        ],
        'AYT': [
            { id: 1, title: 'Türev Giriş', description: 'Türev kavramı ve temel kurallar', duration: '25:15', views: 198, status: 'completed', progress: 100 },
            { id: 2, title: 'Türev Uygulamaları', description: 'Türev uygulamaları ve problemler', duration: '35:40', views: 167, status: 'completed', progress: 100 },
            { id: 3, title: 'İntegral Giriş', description: 'İntegral kavramı ve hesaplama', duration: '30:25', views: 145, status: 'current', progress: 30 },
            { id: 4, title: 'Belirli İntegral', description: 'Belirli integral ve uygulamaları', duration: '28:50', views: 123, status: 'ready', progress: 0 },
            { id: 5, title: 'Limit ve Süreklilik', description: 'Limit kavramı ve süreklilik', duration: '32:10', views: 98, status: 'locked', progress: 0 },
            { id: 6, title: 'Diziler ve Seriler', description: 'Matematiksel diziler ve seriler', duration: '27:45', views: 76, status: 'locked', progress: 0 }
        ]
    };

    return videoData[packageName] || [];
}

function renderVideos(videos) {
    const container = document.getElementById('videoContainer');
    let videosHtml = '';

    videos.forEach((video, index) => {
        const statusConfig = getStatusConfig(video.status);
        const progressBar = video.progress > 0 ? `
            <div class="video-progress">
                <div class="video-progress-bar" style="width: ${video.progress}%"></div>
            </div>
        ` : '';

        videosHtml += `
            <div class="video-item ${video.status}" onclick="${video.status !== 'locked' ? `playVideo(${video.id})` : ''}">
                <div class="video-thumbnail">
                    <i class="${statusConfig.icon}"></i>
                </div>
                <div class="video-info">
                    <h6 class="video-title">${index + 1}. ${video.title}</h6>
                    <p class="video-description">${video.description}</p>
                    <div class="video-stats">
                        <div class="video-stat">
                            <i class="fas fa-clock"></i>
                            <span>${video.duration}</span>
                        </div>
                        <div class="video-stat">
                            <i class="fas fa-eye"></i>
                            <span>${video.views} izlenme</span>
                        </div>
                        ${video.progress > 0 ? `
                            <div class="video-stat">
                                <i class="fas fa-chart-line"></i>
                                <span>%${video.progress} tamamlandı</span>
                            </div>
                        ` : ''}
                    </div>
                    ${progressBar}
                </div>
                <div class="video-actions">
                    <span class="video-status ${statusConfig.class}">${statusConfig.text}</span>
                    <button class="play-button" ${video.status === 'locked' ? 'disabled' : ''}>
                        <i class="${statusConfig.playIcon}"></i>
                    </button>
                </div>
            </div>
        `;
    });

    container.innerHTML = videosHtml;
}

function getStatusConfig(status) {
    const configs = {
        'locked': {
            icon: 'fas fa-lock',
            text: 'Kilitli',
            class: 'status-locked',
            playIcon: 'fas fa-lock'
        },
        'ready': {
            icon: 'fas fa-play',
            text: 'İzle',
            class: 'status-ready',
            playIcon: 'fas fa-play'
        },
        'current': {
            icon: 'fas fa-play-circle',
            text: 'Devam Et',
            class: 'status-current',
            playIcon: 'fas fa-play'
        },
        'completed': {
            icon: 'fas fa-check-circle',
            text: 'Tamamlandı',
            class: 'status-completed',
            playIcon: 'fas fa-redo'
        }
    };
    return configs[status] || configs['locked'];
}

function playVideo(videoId) {
    alert(`Video ${videoId} oynatılıyor... (Bu fonksiyon daha sonra gerçek video oynatıcısı ile değiştirilecek)`);
}

// Sayfa yüklendiğinde
document.addEventListener('DOMContentLoaded', function() {
    loadVideos();
});
</script> 